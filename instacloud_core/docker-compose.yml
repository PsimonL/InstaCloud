version: "3.6"

x-build-args: &build_args
  INSTALL_PYTHON_VERSION: "3.11"

x-default-volumes: &default_volumes
  volumes:
    - ./:/app
    - ./dev.db:/tmp/dev.db

services:
  s3service:
    image: quay.io/minio/minio:latest
    command: server --console-address ":9001" /data
    ports:
      - '9000:9000'
      - '9001:9001'
    env_file: minio.env

  initialize-s3service:
    image: quay.io/minio/mc
    entrypoint: >
      /bin/sh -c '
      /usr/bin/mc alias set s3service http://s3service:9000 "$${MINIO_ROOT_USER}" "$${MINIO_ROOT_PASSWORD}";
      /usr/bin/mc mb s3service/"$${BUCKET_NAME}";
      /usr/bin/mc admin user add s3service "$${ACCESS_KEY}" "$${SECRET_KEY}";
      /usr/bin/mc admin policy attach s3service readwrite --user "$${ACCESS_KEY}";
      exit 0;
      '
    depends_on:
      - s3service
    env_file: minio.env

  flask-dev:
    build:
      context: .
      target: development
      args:
        <<: *build_args
    image: "instacloud_core-development"
    ports:
      - "8080:5000"
      - "2992:2992"
    <<: *default_volumes
    depends_on:
      - s3service 
      - initialize-s3service
 
  flask-prod:
    build:
      context: .
      target: production
      args:
        <<: *build_args
    image: "instacloud_core-production"
    ports:
      - "8080:5000"
    environment:
      FLASK_ENV: production
      FLASK_DEBUG: 0
      LOG_LEVEL: info
      GUNICORN_WORKERS: 4
    <<: *default_volumes

  manage:
    build:
      context: .
      target: development
      args:
        <<: *build_args
    entrypoint: flask
    environment:
      FLASK_ENV: production
      FLASK_DEBUG: 0
    image: "instacloud_core-manage"
    stdin_open: true
    tty: true
    <<: *default_volumes
